#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>

const char* ssid = "YourWiFi";
const char* password = "YourPassword";

WiFi.begin(ssid, password);
while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
}
Serial.println("Connected to WiFi");

ESP8266WebServer server(80);
const int lockPin = D1;
const int segmentPins[] = {D2, D3, D4, D5};
String correctCode = "1234";
String receivedCode = "----";

const char* lockServer = "http://<LOCK_ESP_IP>/update";
const int lightSensor = A0;
const int tempSensor = D6;
const int ledPins[] = {D7, D8, D9, D10};
const int buttonPins[] = {D3, D4, D5, D6};
const int distanceSensor = A1;

int puzzleIndex = 0;
String puzzleCode = "1234";
WiFiClient client;

void sendNumberToLock(char num) {
    HTTPClient http;
    String url = String(lockServer) + "?num=" + num;
    http.begin(client, url);
    http.GET();
    http.end();
}

void solvePuzzle1() {
    int brightness = analogRead(lightSensor);
    if (brightness < 800) {
        delay(2000);
        sendNumberToLock(puzzleCode[puzzleIndex++]);
    }
}

void solvePuzzle3() {
    bool sequenceCorrect = true;
    for (int i = 0; i < 4; i++) {
        digitalWrite(ledPins[i], HIGH);
        delay(500);
        digitalWrite(ledPins[i], LOW);
        if (!digitalRead(buttonPins[i])) {
            sequenceCorrect = false;
        }
    }
    if (sequenceCorrect) {
        sendNumberToLock(puzzleCode[puzzleIndex++]);
    }
}

void solvePuzzle4() {
    int distance = analogRead(distanceSensor);
    if (distance > 700) {
        delay(2000);
        sendNumberToLock(puzzleCode[puzzleIndex++]);
    }
}

server.on("/update", HTTP_GET, []() {
    String num = server.arg("num");
    if (num.length() == 1 && puzzleIndex < 4) {
        receivedCode[puzzleIndex] = num[0];
        digitalWrite(segmentPins[puzzleIndex], HIGH);
        puzzleIndex++;
    }
    server.send(200, "text/plain", receivedCode);
});

server.on("/unlock", HTTP_GET, []() {
    if (server.arg("code") == correctCode) {
        digitalWrite(lockPin, LOW);
        server.send(200, "text/html", "<h1>Door Unlocked!</h1>");
    } else {
        server.send(200, "text/html", "<h1>Wrong Code!</h1>");
    }
});
